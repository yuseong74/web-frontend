// -----------------------------------------------------------------------------
// TODO
// -----------------------------------------------------------------------------
// - [ ] 화살표 함수 문법을 사용해 유틸리티 함수를 작성하세요.
// - [ ] 각 함수의 기능을 구현합니다.
// -----------------------------------------------------------------------------

// fibonacci 유틸리티 -------------------------------------------------------------

var fibonacci = function() {};

// numberWithComma 유틸리티 -------------------------------------------------------

var numberWithComma = function() {};

// ------------------------------------------------------------------------------
// TEST
// ------------------------------------------------------------------------------
// - [ ] Jest 테스트 러너를 구동한 후, 테스트가 성공하도록 함수 로직을 구성합니다.
// ------------------------------------------------------------------------------

// test('fibonacci 유틸리티', () => {
//   expect(fibonacci(6)).toBe(8);
//   expect(fibonacci(12)).toBe(144);
//   expect(fibonacci(18)).toBe(2584);
// });

// test('numberWithComma 유틸리티', () => {
//   expect(numberWithComma(900)).toBe('900');
//   expect(numberWithComma(9900)).toBe('9,900');
//   expect(numberWithComma(1398700)).toBe('1,398,700');
// });
